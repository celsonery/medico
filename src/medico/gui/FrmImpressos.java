/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package medico.gui;

import java.awt.Color;
import java.sql.Date;
import java.text.SimpleDateFormat;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JList;
import javax.swing.JOptionPane;
import medico.bean.AtestadoClinico;
import medico.bean.AtestadoEsp;
import medico.bean.AtestadoMedico;
import medico.bean.Especialidade;
import medico.dao.AtestadoCliDao;
import medico.dao.AtestadoEspDao;
import medico.dao.AtestadoMedDao;
import medico.dao.EspecialidadeDao;
import medico.util.guis;
import net.sf.jasperreports.engine.JRException;
import net.sf.jasperreports.engine.JasperCompileManager;
import net.sf.jasperreports.engine.JasperFillManager;
import net.sf.jasperreports.engine.JasperPrint;
import net.sf.jasperreports.engine.JasperReport;
import net.sf.jasperreports.view.JasperViewer;

/**
 *
 * @author celso
 */
public class FrmImpressos extends javax.swing.JInternalFrame {

    List<AtestadoMedico> listaAtestadoMedico;
    List<AtestadoClinico> listaAtestadoClinico;
    List<AtestadoEsp> listaAtestadoEspecial;
    List<Especialidade> listaEsp;

    AtestadoMedico modSec = null;
    AtestadoClinico cliSec = null;
    AtestadoEsp espSec = null;

    /**
     * Creates new form FrmImpressos
     */
    public FrmImpressos() {
        initComponents();
        ListarAtestados();
        ListarEspecialidades();

        //BuscaCampos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        cmbModMedico = new javax.swing.JComboBox();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtAtestadoMedico = new javax.swing.JTextArea();
        txtEnderecoMedico = new javax.swing.JTextField();
        txtTelsMedico = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        btnPrintMedico = new javax.swing.JButton();
        jLabel5 = new javax.swing.JLabel();
        btnSalvaModMedico = new javax.swing.JButton();
        lblMsgMed = new javax.swing.JLabel();
        btnDelModMed = new javax.swing.JButton();
        btnNovoModMed = new javax.swing.JButton();
        btnSairMed = new javax.swing.JButton();
        jLabel9 = new javax.swing.JLabel();
        txtDataMedico = new javax.swing.JFormattedTextField();
        txtDataConsulta = new javax.swing.JFormattedTextField();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jTextUpper1 = new clinica.util.JTextUpper();
        jPanel3 = new javax.swing.JPanel();
        jPanel5 = new javax.swing.JPanel();
        jLabel11 = new javax.swing.JLabel();
        cmbNomeEsp = new javax.swing.JComboBox();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jScrollPane3 = new javax.swing.JScrollPane();
        txtPrescricaoEsp = new javax.swing.JTextArea();
        jLabel14 = new javax.swing.JLabel();
        txtDataEsp = new javax.swing.JFormattedTextField();
        jLabel15 = new javax.swing.JLabel();
        btnNovoEsp = new javax.swing.JButton();
        btnExcluirEsp = new javax.swing.JButton();
        btnSaveEsp = new javax.swing.JButton();
        btnPrintEsp = new javax.swing.JButton();
        btnSairEsp = new javax.swing.JButton();
        txtEndEsp = new javax.swing.JTextField();
        txtTelsEsp = new javax.swing.JTextField();
        lblMsgEsp = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        cmbModClinica = new javax.swing.JComboBox();
        jLabel1 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        txtAtestadoClinica = new javax.swing.JTextArea();
        jLabel6 = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        jScrollPane4 = new javax.swing.JScrollPane();
        listEspecialidade = new javax.swing.JList();
        btnEspNew = new javax.swing.JButton();
        btnEspEdit = new javax.swing.JButton();
        btnEspDel = new javax.swing.JButton();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        lblMsgCli = new javax.swing.JLabel();
        txtEnderecoClinica = new javax.swing.JTextField();
        txtTelsClinica = new javax.swing.JTextField();
        jLabel10 = new javax.swing.JLabel();
        txtDataClinica = new javax.swing.JFormattedTextField();
        jPanel6 = new javax.swing.JPanel();
        btnSairCli = new javax.swing.JButton();
        btnPrintClinica = new javax.swing.JButton();
        btnSaveModCli = new javax.swing.JButton();
        btnDelModCli = new javax.swing.JButton();
        btnNovoModCli = new javax.swing.JButton();
        jLabel18 = new javax.swing.JLabel();
        jLabel19 = new javax.swing.JLabel();
        jTextUpper2 = new clinica.util.JTextUpper();
        txtDataClinicaConsulta = new javax.swing.JFormattedTextField();
        jPanel7 = new javax.swing.JPanel();
        jLabel20 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();

        setBorder(null);
        setTitle("Impressos");

        jTabbedPane1.setToolTipText("");

        jLabel2.setText("Atestado");

        cmbModMedico.setEditable(true);
        cmbModMedico.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        cmbModMedico.setToolTipText("Selecione ou crie um novo modelo.");
        cmbModMedico.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                cmbModMedicoItemStateChanged(evt);
            }
        });
        cmbModMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbModMedicoActionPerformed(evt);
            }
        });
        cmbModMedico.addVetoableChangeListener(new java.beans.VetoableChangeListener() {
            public void vetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {
                cmbModMedicoVetoableChange(evt);
            }
        });

        txtAtestadoMedico.setColumns(20);
        txtAtestadoMedico.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        txtAtestadoMedico.setLineWrap(true);
        txtAtestadoMedico.setRows(5);
        txtAtestadoMedico.setTabSize(3);
        txtAtestadoMedico.setToolTipText("Insira o texto do atestado.");
        txtAtestadoMedico.setWrapStyleWord(true);
        jScrollPane1.setViewportView(txtAtestadoMedico);

        txtEnderecoMedico.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtEnderecoMedico.setToolTipText("Informe o endereço que deverá constar no atestado.");

        txtTelsMedico.setFont(new java.awt.Font("Dialog", 0, 14)); // NOI18N
        txtTelsMedico.setToolTipText("Informe os telefones que deverão constar no atestado.");

        jLabel3.setText("Endereço");

        jLabel4.setText("Telefones:");

        btnPrintMedico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/Printer_Blue.png"))); // NOI18N
        btnPrintMedico.setText("Imprimir");
        btnPrintMedico.setToolTipText("Imprimir atestado médico.");
        btnPrintMedico.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnPrintMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintMedicoActionPerformed(evt);
            }
        });

        jLabel5.setText("Prescrição médica");

        btnSalvaModMedico.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/salvar.png"))); // NOI18N
        btnSalvaModMedico.setText("Salvar");
        btnSalvaModMedico.setToolTipText("Salva atestado atual como novo modelo");
        btnSalvaModMedico.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSalvaModMedicoActionPerformed(evt);
            }
        });

        btnDelModMed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/DeleteExame.png"))); // NOI18N
        btnDelModMed.setText("Excluir");
        btnDelModMed.setToolTipText("Exclui o atestado selecionado.");
        btnDelModMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelModMedActionPerformed(evt);
            }
        });

        btnNovoModMed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/novo.png"))); // NOI18N
        btnNovoModMed.setText("Novo");
        btnNovoModMed.setToolTipText("Cria um novo modelo de atestado.");
        btnNovoModMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoModMedActionPerformed(evt);
            }
        });

        btnSairMed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/sair.png"))); // NOI18N
        btnSairMed.setText("Sair");
        btnSairMed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairMedActionPerformed(evt);
            }
        });

        jLabel9.setText("Data");

        try {
            txtDataMedico.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataMedico.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataMedico.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N

        try {
            txtDataConsulta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataConsulta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataConsulta.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N

        jLabel16.setText("Próxima consulta");

        jLabel17.setText("Paciente");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(lblMsgMed, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 945, Short.MAX_VALUE)
                    .addComponent(txtEnderecoMedico, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(txtTelsMedico)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel17)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextUpper1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(4, 4, 4)
                        .addComponent(cmbModMedico, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataMedico, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel4)
                            .addComponent(jLabel9))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addComponent(jLabel16)
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDataConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 132, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btnNovoModMed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnDelModMed)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSalvaModMedico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnPrintMedico)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(btnSairMed))))
                    .addComponent(jLabel5))
                .addContainerGap())
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelModMed, btnNovoModMed, btnPrintMedico, btnSairMed, btnSalvaModMedico});

        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cmbModMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextUpper1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 244, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtEnderecoMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtTelsMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtDataConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDataMedico, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(lblMsgMed, javax.swing.GroupLayout.PREFERRED_SIZE, 21, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(488, 488, 488)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnPrintMedico)
                            .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                .addComponent(btnSalvaModMedico)
                                .addComponent(btnDelModMed)
                                .addComponent(btnNovoModMed))
                            .addComponent(btnSairMed))))
                .addContainerGap(43, Short.MAX_VALUE))
        );

        jPanel1Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelModMed, btnNovoModMed, btnPrintMedico, btnSairMed, btnSalvaModMedico});

        jTabbedPane1.addTab("Atestado Médico Dr. Paulo", null, jPanel1, "");

        jLabel11.setText("Paciente");

        cmbNomeEsp.setEditable(true);
        cmbNomeEsp.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        cmbNomeEsp.setToolTipText("Preencha o nome do paciente");
        cmbNomeEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNomeEspActionPerformed(evt);
            }
        });

        jLabel12.setText("Endereço");

        jLabel13.setText("Prescrição Médica");

        txtPrescricaoEsp.setColumns(20);
        txtPrescricaoEsp.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        txtPrescricaoEsp.setLineWrap(true);
        txtPrescricaoEsp.setRows(5);
        txtPrescricaoEsp.setToolTipText("Preencha com a prescrição médica do paciente");
        txtPrescricaoEsp.setWrapStyleWord(true);
        jScrollPane3.setViewportView(txtPrescricaoEsp);

        jLabel14.setText("Data");

        try {
            txtDataEsp.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataEsp.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataEsp.setToolTipText("Preencha com a data do atestado");
        txtDataEsp.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N

        jLabel15.setText("Telefones:");

        btnNovoEsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/novo.png"))); // NOI18N
        btnNovoEsp.setText("Novo");
        btnNovoEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoEspActionPerformed(evt);
            }
        });

        btnExcluirEsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/DeleteExame.png"))); // NOI18N
        btnExcluirEsp.setText("Excluir");
        btnExcluirEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirEspActionPerformed(evt);
            }
        });

        btnSaveEsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/salvar.png"))); // NOI18N
        btnSaveEsp.setText("Salvar");
        btnSaveEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveEspActionPerformed(evt);
            }
        });

        btnPrintEsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/Printer_Blue.png"))); // NOI18N
        btnPrintEsp.setText("Imprimir");
        btnPrintEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintEspActionPerformed(evt);
            }
        });

        btnSairEsp.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/sair.png"))); // NOI18N
        btnSairEsp.setText("Sair");
        btnSairEsp.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairEspActionPerformed(evt);
            }
        });

        txtEndEsp.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N

        txtTelsEsp.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel15)
                            .addComponent(jLabel14)
                            .addComponent(txtDataEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 157, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btnNovoEsp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnExcluirEsp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSaveEsp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnPrintEsp)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnSairEsp))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane3, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 933, Short.MAX_VALUE)
                            .addComponent(cmbNomeEsp, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(jLabel11)
                            .addComponent(jLabel12)
                            .addComponent(jLabel13)
                            .addComponent(txtEndEsp))
                        .addContainerGap())
                    .addComponent(txtTelsEsp)))
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnExcluirEsp, btnNovoEsp, btnPrintEsp, btnSairEsp, btnSaveEsp});

        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel11)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmbNomeEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel12)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtEndEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jLabel13)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.DEFAULT_SIZE, 250, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel15)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(txtTelsEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(btnSairEsp)
                        .addComponent(btnPrintEsp)
                        .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(btnSaveEsp)
                            .addComponent(btnExcluirEsp)
                            .addComponent(btnNovoEsp)))
                    .addGroup(jPanel5Layout.createSequentialGroup()
                        .addComponent(jLabel14)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtDataEsp, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(20, 20, 20)))
                .addContainerGap())
        );

        jPanel5Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnExcluirEsp, btnNovoEsp, btnPrintEsp, btnSairEsp, btnSaveEsp});

        lblMsgEsp.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(lblMsgEsp, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMsgEsp, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Receituário Especial", jPanel3);

        cmbModClinica.setEditable(true);
        cmbModClinica.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        cmbModClinica.setToolTipText("Nome do modelo de atestado.");
        cmbModClinica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbModClinicaActionPerformed(evt);
            }
        });

        jLabel1.setText("Atestado");

        txtAtestadoClinica.setColumns(20);
        txtAtestadoClinica.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        txtAtestadoClinica.setLineWrap(true);
        txtAtestadoClinica.setRows(5);
        txtAtestadoClinica.setToolTipText("Insira o texto do atestado clínico.");
        txtAtestadoClinica.setWrapStyleWord(true);
        jScrollPane2.setViewportView(txtAtestadoClinica);

        jLabel6.setText("Prescrição médica");

        jPanel4.setBorder(javax.swing.BorderFactory.createTitledBorder("Especialidades"));

        listEspecialidade.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        listEspecialidade.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        listEspecialidade.setToolTipText("Especialidades que serão impressas no atestado clínico.");
        jScrollPane4.setViewportView(listEspecialidade);

        btnEspNew.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/novoUser.png"))); // NOI18N
        btnEspNew.setToolTipText("Criar nova especialidade");
        btnEspNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEspNewActionPerformed(evt);
            }
        });

        btnEspEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/Modify.png"))); // NOI18N
        btnEspEdit.setToolTipText("Modifica especialidade selecionada");
        btnEspEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEspEditActionPerformed(evt);
            }
        });

        btnEspDel.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/DeleteUser.png"))); // NOI18N
        btnEspDel.setToolTipText("Exclui especialidade selecionada");
        btnEspDel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnEspDelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel4Layout.createSequentialGroup()
                        .addGap(0, 69, Short.MAX_VALUE)
                        .addComponent(btnEspNew)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEspEdit)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(btnEspDel))
                    .addComponent(jScrollPane4, javax.swing.GroupLayout.PREFERRED_SIZE, 0, Short.MAX_VALUE))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnEspDel, btnEspEdit, btnEspNew});

        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(btnEspEdit)
                    .addComponent(btnEspDel)
                    .addComponent(btnEspNew))
                .addContainerGap())
        );

        jPanel4Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnEspDel, btnEspEdit});

        jLabel7.setText("Endereço");

        jLabel8.setText("Telefones");

        lblMsgCli.setToolTipText("");

        txtEnderecoClinica.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        txtEnderecoClinica.setToolTipText("Informe o endereço da clínica");

        txtTelsClinica.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N
        txtTelsClinica.setToolTipText("Informe os telefones");

        jLabel10.setText("Data");

        try {
            txtDataClinica.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataClinica.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataClinica.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N

        btnSairCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/sair.png"))); // NOI18N
        btnSairCli.setText("Sair");
        btnSairCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSairCliActionPerformed(evt);
            }
        });

        btnPrintClinica.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/Printer_Blue.png"))); // NOI18N
        btnPrintClinica.setText("Imprimir");
        btnPrintClinica.setToolTipText("Imprimir atestado clínico");
        btnPrintClinica.setHorizontalTextPosition(javax.swing.SwingConstants.RIGHT);
        btnPrintClinica.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPrintClinicaActionPerformed(evt);
            }
        });

        btnSaveModCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/salvar.png"))); // NOI18N
        btnSaveModCli.setText("Salvar");
        btnSaveModCli.setToolTipText("Salva o atestado atual como modelo.");
        btnSaveModCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSaveModCliActionPerformed(evt);
            }
        });

        btnDelModCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/DeleteExame.png"))); // NOI18N
        btnDelModCli.setText("Excluir");
        btnDelModCli.setToolTipText("Exclui o atestado selecionado.");
        btnDelModCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDelModCliActionPerformed(evt);
            }
        });

        btnNovoModCli.setIcon(new javax.swing.ImageIcon(getClass().getResource("/medico/imagens/novo.png"))); // NOI18N
        btnNovoModCli.setText("Novo");
        btnNovoModCli.setToolTipText("Cria um novo modelo de atestado.");
        btnNovoModCli.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnNovoModCliActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(btnNovoModCli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnDelModCli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSaveModCli)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnPrintClinica)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btnSairCli)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.HORIZONTAL, new java.awt.Component[] {btnDelModCli, btnNovoModCli, btnPrintClinica, btnSairCli, btnSaveModCli});

        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(27, Short.MAX_VALUE)
                .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(btnSaveModCli)
                        .addComponent(btnPrintClinica)
                        .addComponent(btnDelModCli)
                        .addComponent(btnNovoModCli))
                    .addComponent(btnSairCli))
                .addContainerGap())
        );

        jPanel6Layout.linkSize(javax.swing.SwingConstants.VERTICAL, new java.awt.Component[] {btnDelModCli, btnNovoModCli, btnPrintClinica, btnSairCli, btnSaveModCli});

        jLabel18.setText("Próxima consulta");

        jLabel19.setText("Paciente");

        try {
            txtDataClinicaConsulta.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##/##/####")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        txtDataClinicaConsulta.setHorizontalAlignment(javax.swing.JTextField.CENTER);
        txtDataClinicaConsulta.setFont(new java.awt.Font("DejaVu Sans", 0, 14)); // NOI18N

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10)
                                .addGap(95, 95, 95)
                                .addComponent(jLabel18))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(txtDataClinica, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtDataClinicaConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, 111, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 104, Short.MAX_VALUE)
                        .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jScrollPane2)
                            .addComponent(txtTelsClinica)
                            .addComponent(txtEnderecoClinica)
                            .addComponent(cmbModClinica, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel1)
                                    .addComponent(jLabel7)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel19)
                                    .addComponent(jLabel6))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addComponent(jTextUpper2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(lblMsgCli, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(12, 12, 12))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmbModClinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel19)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextUpper2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 197, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addGap(8, 8, 8)
                        .addComponent(txtEnderecoClinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel8)
                        .addGap(12, 12, 12)
                        .addComponent(txtTelsClinica, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jPanel4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10)
                            .addComponent(jLabel18))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(txtDataClinica, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtDataClinicaConsulta, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addComponent(jPanel6, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(lblMsgCli, javax.swing.GroupLayout.PREFERRED_SIZE, 22, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        jTabbedPane1.addTab("Atestado Clínica", jPanel2);

        jLabel20.setText("Paciente");

        jLabel21.setText("Valor");

        javax.swing.GroupLayout jPanel7Layout = new javax.swing.GroupLayout(jPanel7);
        jPanel7.setLayout(jPanel7Layout);
        jPanel7Layout.setHorizontalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel20)
                    .addComponent(jLabel21))
                .addContainerGap(896, Short.MAX_VALUE))
        );
        jPanel7Layout.setVerticalGroup(
            jPanel7Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel7Layout.createSequentialGroup()
                .addGap(14, 14, 14)
                .addComponent(jLabel20)
                .addGap(53, 53, 53)
                .addComponent(jLabel21)
                .addContainerGap(478, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Recibo", jPanel7);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnSalvaModMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSalvaModMedicoActionPerformed

        boolean error = false;

        if (cmbModMedico.getSelectedItem() == null) {
            lblMsgMed.setText("Preencha o nome do modelo para salvamento.");
            error = true;
        } else {
            System.out.println(cmbModMedico.getSelectedItem().toString());
        }

        if (txtAtestadoMedico.getText().isEmpty()) {
            lblMsgMed.setText("Preencha o atestado medico para salvamento.");
            error = true;
        }

        if (!error) {

            System.out.println("Tudo ok, salvando modelo");

            AtestadoMedDao MedDao = new AtestadoMedDao();
            AtestadoMedico med = new AtestadoMedico();

            med.setNome(cmbModMedico.getSelectedItem().toString());
            med.setText(txtAtestadoMedico.getText());
            med.setTipo("Medico");
            med.setEnd(txtEnderecoMedico.getText());
            med.setTels(txtTelsMedico.getText());
            med.setData(txtDataMedico.getText());

            if (this.modSec == null) {
                System.out.println("Salvando modelo novo!");

                if (MedDao.AdicionarModelo(med) == 1) {
                    lblMsgMed.setForeground(Color.blue);
                    lblMsgMed.setText("Atestado gravado com sucesso!");
                    this.modSec = med;
                    ListarAtestados();
                } else {
                    lblMsgMed.setForeground(Color.red);
                    lblMsgMed.setText("Não foi possível gravar atestado!");
                }

            } else {
                System.out.println("Salvando modelo existente!");

                med.setId(listaAtestadoMedico.get(cmbModMedico.getSelectedIndex()).getId());

                if (MedDao.AlterarModelo(med) == 1) {
                    lblMsgMed.setForeground(Color.blue);
                    lblMsgMed.setText("Atestado gravado com sucesso!");
                    this.modSec = med;
                    ListarAtestados();
                } else {
                    lblMsgMed.setForeground(Color.red);
                    lblMsgMed.setText("Não foi possível gravar atestado!");
                }
            }

        }
    }//GEN-LAST:event_btnSalvaModMedicoActionPerformed

    private void cmbModMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbModMedicoActionPerformed
        if (cmbModMedico.getSelectedIndex() >= 0) {
            this.modSec = listaAtestadoMedico.get(cmbModMedico.getSelectedIndex());
            PreencheComboAtestado(cmbModMedico.getSelectedIndex());
        }
    }//GEN-LAST:event_cmbModMedicoActionPerformed

    private void btnPrintMedicoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintMedicoActionPerformed
        try {
            Map parametros = new HashMap();
            parametros.put("end", txtEnderecoMedico.getText());
            parametros.put("tels", txtTelsMedico.getText());
            parametros.put("text", txtAtestadoMedico.getText());
            parametros.put("data", txtDataMedico.getText());

            JasperReport report = JasperCompileManager.compileReport("reports/AtestadoMedico.jrxml");
            //JasperPrint print = JasperFillManager.fillReport(report, parametros, new JRBeanCollectionDataSource(listaEsp));
            JasperPrint print = JasperFillManager.fillReport(report, parametros);
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);

        } catch (JRException ex) {
            System.out.println("Erro ao imprimir relatorio.");
            Logger.getLogger(FrmImpressos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPrintMedicoActionPerformed

    private void btnDelModMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelModMedActionPerformed
        if (cmbModMedico.getSelectedItem() != null) {
            if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir atestado " + cmbModMedico.getSelectedItem().toString() + " ?", "ATENÇÃO", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {
                AtestadoMedDao mDao = new AtestadoMedDao();
                if (mDao.ExcluirModelo(cmbModMedico.getSelectedItem().toString()) != 1) {
                    lblMsgMed.setForeground(Color.red);
                    lblMsgMed.setText("Não foi possível excluir atestado selecionado!");
                } else {
                    lblMsgMed.setForeground(Color.blue);
                    lblMsgMed.setText("Atestado excluido com sucesso!");
                    cmbModMedico.removeItemAt(cmbModMedico.getSelectedIndex());
                }
            }
        }
    }//GEN-LAST:event_btnDelModMedActionPerformed

    private void btnNovoModMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoModMedActionPerformed

        System.out.println("Antes: " + this.modSec + " itens: " + cmbModMedico.getItemCount());

        if (this.modSec != null) {
            System.out.println("criando novo modelo...");
            cmbModMedico.insertItemAt("", 0);
            cmbModMedico.setSelectedIndex(0);
        }
        /*
         if (cmbModMedico.getItemCount() != 0) {
         cmbModMedico.setSelectedIndex(0);
         }
         */
        txtAtestadoMedico.setText(null);
        txtDataMedico.setText(DataAtual());
        //txtEnderecoMedico.setText(null);
        //txtTelsMedico.setText(null);

        cmbModMedico.requestFocus();

        this.modSec = null;

        System.out.println("Depois: " + this.modSec + " itens: " + cmbModMedico.getItemCount());

    }//GEN-LAST:event_btnNovoModMedActionPerformed

    private void cmbModMedicoItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_cmbModMedicoItemStateChanged
        System.out.println("Combo Action Listener");

        if (cmbModMedico.getSelectedIndex() >= 0) {

            this.modSec = listaAtestadoMedico.get(cmbModMedico.getSelectedIndex());

            PreencheComboAtestado(cmbModMedico.getSelectedIndex());
        }
    }//GEN-LAST:event_cmbModMedicoItemStateChanged

    private void cmbModMedicoVetoableChange(java.beans.PropertyChangeEvent evt)throws java.beans.PropertyVetoException {//GEN-FIRST:event_cmbModMedicoVetoableChange
        System.out.println("teste");
    }//GEN-LAST:event_cmbModMedicoVetoableChange

    private void btnSairMedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairMedActionPerformed
        guis.setiPrint(null);
        this.dispose();
    }//GEN-LAST:event_btnSairMedActionPerformed

    private void btnSairEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairEspActionPerformed
        guis.setiPrint(null);
        this.dispose();
    }//GEN-LAST:event_btnSairEspActionPerformed

    private void btnNovoEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoEspActionPerformed
        if (this.espSec != null) {
            System.out.println("criando novo modelo...");
            cmbNomeEsp.insertItemAt("", 0);
            cmbNomeEsp.setSelectedIndex(0);
        }
        txtEndEsp.setText(null);
        txtPrescricaoEsp.setText(null);
        txtDataEsp.setText(DataAtual());

        cmbNomeEsp.requestFocus();

        this.espSec = null;
    }//GEN-LAST:event_btnNovoEspActionPerformed

    private void btnExcluirEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirEspActionPerformed
        if (cmbNomeEsp.getSelectedItem() != null) {
            if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir atestado " + cmbNomeEsp.getSelectedItem().toString() + " ?", "ATENÇÃO", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {
                AtestadoEspDao eDao = new AtestadoEspDao();
                if (eDao.ExcluirAtestadoEsp(listaAtestadoEspecial.get(cmbNomeEsp.getSelectedIndex()).getId()) != 1) {
                    lblMsgEsp.setForeground(Color.red);
                    lblMsgEsp.setText("Não foi possível excluir atestado selecionado!");
                } else {
                    lblMsgEsp.setForeground(Color.blue);
                    lblMsgEsp.setText("Atestado excluido com sucesso!");
                    cmbNomeEsp.removeItemAt(cmbModMedico.getSelectedIndex());
                }
            }
        }
    }//GEN-LAST:event_btnExcluirEspActionPerformed

    private void btnSaveEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveEspActionPerformed
        boolean error = false;

        if (cmbNomeEsp.getSelectedItem() == null) {
            lblMsgEsp.setText("Preencha o nome do paciente para salvamento.");
            error = true;
        } else {
            System.out.println(cmbModMedico.getSelectedItem().toString());
        }

        if (txtPrescricaoEsp.getText().isEmpty()) {
            lblMsgEsp.setText("Preencha a prescrição médico para salvamento.");
            error = true;
        }

        if (!error) {

            System.out.println("Tudo ok, salvando modelo");

            AtestadoEspDao eDao = new AtestadoEspDao();
            AtestadoEsp esp = new AtestadoEsp();

            esp.setPaciente(cmbNomeEsp.getSelectedItem().toString());
            esp.setEnd(txtEndEsp.getText());
            esp.setPrescricao(txtPrescricaoEsp.getText());
            esp.setTels(txtTelsEsp.getText());
            esp.setData(txtDataEsp.getText());

            if (this.espSec == null) {
                System.out.println("Salvando modelo novo!");

                if (eDao.AdicionarAtestadoEsp(esp) == 1) {
                    lblMsgEsp.setForeground(Color.blue);
                    lblMsgEsp.setText("Atestado gravado com sucesso!");
                    this.espSec = esp;
                    ListarAtestados();
                } else {
                    lblMsgEsp.setForeground(Color.red);
                    lblMsgEsp.setText("Não foi possível gravar atestado!");
                }

            } else {
                System.out.println("Salvando modelo existente!");

                esp.setId(listaAtestadoEspecial.get(cmbNomeEsp.getSelectedIndex()).getId());

                if (eDao.AlterarAtestadoEsp(esp) == 1) {
                    lblMsgEsp.setForeground(Color.blue);
                    lblMsgEsp.setText("Atestado gravado com sucesso!");
                    this.espSec = esp;
                    ListarAtestados();
                } else {
                    lblMsgEsp.setForeground(Color.red);
                    lblMsgEsp.setText("Não foi possível gravar atestado!");
                }
            }

        }
    }//GEN-LAST:event_btnSaveEspActionPerformed

    private void btnPrintEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintEspActionPerformed
        try {
            Map parametros = new HashMap();
            if (cmbNomeEsp.getSelectedItem() != null) {
                parametros.put("paciente", cmbNomeEsp.getSelectedItem().toString());
            }
            parametros.put("endereco", txtEndEsp.getText());
            parametros.put("tels", txtTelsEsp.getText());
            parametros.put("prescricao", txtPrescricaoEsp.getText());
            parametros.put("data", txtDataEsp.getText());

            JasperReport report = JasperCompileManager.compileReport("reports/AtestadoEspecial.jrxml");
            JasperPrint print = JasperFillManager.fillReport(report, parametros);
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);

        } catch (JRException ex) {
            System.out.println("Erro ao imprimir relatorio.");
            Logger.getLogger(FrmImpressos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPrintEspActionPerformed

    private void cmbNomeEspActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNomeEspActionPerformed
        if (cmbNomeEsp.getSelectedIndex() >= 0) {

            this.espSec = listaAtestadoEspecial.get(cmbNomeEsp.getSelectedIndex());
            PreencheComboAtestadoEsp(cmbNomeEsp.getSelectedIndex());
        }
    }//GEN-LAST:event_cmbNomeEspActionPerformed

    private void btnNovoModCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnNovoModCliActionPerformed
        System.out.println("Antes: " + this.cliSec + " itens: " + cmbModClinica.getItemCount());

        if (this.cliSec != null) {
            System.out.println("criando novo modelo...");
            cmbModClinica.insertItemAt("", 0);
            cmbModClinica.setSelectedIndex(0);
        }
        txtAtestadoClinica.setText(null);
        txtDataClinica.setText(DataAtual());
        cmbModClinica.requestFocus();

        this.cliSec = null;

        System.out.println("Depois: " + this.cliSec + " itens: " + cmbModClinica.getItemCount());

    }//GEN-LAST:event_btnNovoModCliActionPerformed

    private void btnDelModCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDelModCliActionPerformed
        if (cmbModClinica.getSelectedItem() != null) {
            if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir atestado " + cmbModClinica.getSelectedItem().toString() + " ?", "ATENÇÃO", JOptionPane.OK_CANCEL_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.OK_OPTION) {
                AtestadoCliDao cDao = new AtestadoCliDao();
                if (cDao.ExcluirModelo(cmbModClinica.getSelectedItem().toString()) != 1) {
                    lblMsgCli.setForeground(Color.red);
                    lblMsgCli.setText("Não foi possível excluir atestado selecionado!");
                } else {
                    lblMsgCli.setForeground(Color.blue);
                    lblMsgCli.setText("Atestado excluido com sucesso!");
                    cmbModClinica.removeItemAt(cmbModClinica.getSelectedIndex());
                }
            }
        }
    }//GEN-LAST:event_btnDelModCliActionPerformed

    private void btnSaveModCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSaveModCliActionPerformed
        boolean error = false;

        if (cmbModClinica.getSelectedItem() == null) {
            lblMsgCli.setText("Preencha o nome do atestado para salvamento.");
            error = true;
        } else {
            System.out.println(cmbModClinica.getSelectedItem().toString());
        }

        if (txtAtestadoClinica.getText().isEmpty()) {
            lblMsgCli.setText("Preencha o atestado medico para salvamento.");
            error = true;
        }

        if (!error) {

            System.out.println("Tudo ok, salvando modelo");

            AtestadoCliDao MedDao = new AtestadoCliDao();
            AtestadoClinico med = new AtestadoClinico();

            med.setNome(cmbModClinica.getSelectedItem().toString());
            med.setText(txtAtestadoClinica.getText());
            med.setTipo("Clinico");
            med.setEnd(txtEnderecoClinica.getText());
            med.setTels(txtTelsClinica.getText());
            med.setData(txtDataClinica.getText());

            if (this.cliSec == null) {
                System.out.println("Salvando modelo novo!");
                if (MedDao.AdicionarModelo(med) == 1) {
                    lblMsgCli.setForeground(Color.blue);
                    lblMsgCli.setText("Atestado gravado com sucesso!");
                    this.cliSec = med;
                    ListarAtestados();
                    //cmbModClinica.addItem(med.getNome());
                } else {
                    lblMsgCli.setForeground(Color.red);
                    lblMsgCli.setText("Não foi possível gravar atestado!");
                }

            } else {
                System.out.println("Salvando modelo existente 1");

                med.setId(listaAtestadoClinico.get(cmbModClinica.getSelectedIndex()).getId());

                System.out.println("Salvando modelo existente!");
                if (MedDao.AlterarModelo(med) == 1) {
                    lblMsgCli.setForeground(Color.blue);
                    lblMsgCli.setText("Atestado gravado com sucesso!");
                    this.cliSec = med;
                    ListarAtestados();
                } else {
                    lblMsgCli.setForeground(Color.red);
                    lblMsgCli.setText("Não foi possível gravar atestado!");
                }
            }

        }
    }//GEN-LAST:event_btnSaveModCliActionPerformed

    private void btnPrintClinicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPrintClinicaActionPerformed

        String teste = "";

        for (Especialidade listaEsp1 : listaEsp) {
            teste += listaEsp1.getNome() + "\n\n";
        }

        try {
            Map parametros = new HashMap();
            parametros.put("end", txtEnderecoClinica.getText());
            parametros.put("tels", txtTelsClinica.getText());
            parametros.put("atestado", txtAtestadoClinica.getText());
            parametros.put("esp", teste);
            parametros.put("data", txtDataClinica.getText());

            JasperReport report = JasperCompileManager.compileReport("reports/AtestadoClinica.jrxml");
            JasperPrint print = JasperFillManager.fillReport(report, parametros); //, new JRBeanCollectionDataSource(listaEsp));
            JasperViewer viewer = new JasperViewer(print, false);
            viewer.setVisible(true);

        } catch (JRException ex) {
            System.out.println("Erro ao imprimir relatorio.");
            Logger.getLogger(FrmImpressos.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_btnPrintClinicaActionPerformed

    private void btnSairCliActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSairCliActionPerformed
        guis.setiPrint(null);
        this.dispose();
    }//GEN-LAST:event_btnSairCliActionPerformed

    private void btnEspDelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEspDelActionPerformed
        if (listEspecialidade.getSelectedIndex() < 0) {
            JOptionPane.showMessageDialog(this, "Você precisa selecionar uma especialidade", "ATENÇÃO", JOptionPane.INFORMATION_MESSAGE);
        } else {
            if (JOptionPane.showConfirmDialog(this, "Deseja realmente excluir especialidade selecionada?", "ATENÇÂO", JOptionPane.YES_NO_OPTION, JOptionPane.QUESTION_MESSAGE) == JOptionPane.YES_OPTION) {
                System.out.println("Vou excluir Produto: " + this.listaEsp.get(listEspecialidade.getSelectedIndex()).getNome());

                EspecialidadeDao eDao = new EspecialidadeDao();

                if (eDao.ExcluirEsp(this.listaEsp.get(listEspecialidade.getSelectedIndex()).getId()) == 0) {
                    System.out.println("Erro ao excluir");
                    JOptionPane.showMessageDialog(this, "Erro ao excluir produto selecionado!", "ATENÇÃO", JOptionPane.ERROR_MESSAGE);
                } else {
                    System.out.println("Exclusao realizada com sucesso");

                    System.out.println("ok");
                    ListarEspecialidades();
                    System.out.println("listagem");
                    //tabProdutos.removeRow(jTabProdutos.getSelectedRow());
                }
            }
        }
        System.out.println("teste");
    }//GEN-LAST:event_btnEspDelActionPerformed

    private void btnEspEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEspEditActionPerformed
        String novoNomeEsp = JOptionPane.showInputDialog(this, "Digite o novo nome para a especialidade", listaEsp.get(listEspecialidade.getSelectedIndex()).getNome());

        if (novoNomeEsp != null) {
            EspecialidadeDao eDao = new EspecialidadeDao();

            if (eDao.AlterarEsp(this.listaEsp.get(listEspecialidade.getSelectedIndex()), novoNomeEsp) == 1) {
                ListarEspecialidades();
            }

        }
    }//GEN-LAST:event_btnEspEditActionPerformed

    private void btnEspNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnEspNewActionPerformed
        String prodNome = JOptionPane.showInputDialog(this, "Digite o nome da especialidade", "Cadastrar de Nova Especialidade", JOptionPane.INFORMATION_MESSAGE);

        if (!prodNome.equals("")) {
            Especialidade esp = new Especialidade();

            esp.setNome(prodNome.toUpperCase());

            EspecialidadeDao eDao = new EspecialidadeDao();

            if (eDao.AdicionarEsp(esp) == 1) {
                ListarEspecialidades();
            }
        }
    }//GEN-LAST:event_btnEspNewActionPerformed

    private void cmbModClinicaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbModClinicaActionPerformed
        if (cmbModClinica.getSelectedIndex() >= 0) {
            this.cliSec = listaAtestadoClinico.get(cmbModClinica.getSelectedIndex());
            PreencheComboAtestadoClinica(cmbModClinica.getSelectedIndex());
        }
    }//GEN-LAST:event_cmbModClinicaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDelModCli;
    private javax.swing.JButton btnDelModMed;
    private javax.swing.JButton btnEspDel;
    private javax.swing.JButton btnEspEdit;
    private javax.swing.JButton btnEspNew;
    private javax.swing.JButton btnExcluirEsp;
    private javax.swing.JButton btnNovoEsp;
    private javax.swing.JButton btnNovoModCli;
    private javax.swing.JButton btnNovoModMed;
    private javax.swing.JButton btnPrintClinica;
    private javax.swing.JButton btnPrintEsp;
    private javax.swing.JButton btnPrintMedico;
    private javax.swing.JButton btnSairCli;
    private javax.swing.JButton btnSairEsp;
    private javax.swing.JButton btnSairMed;
    private javax.swing.JButton btnSalvaModMedico;
    private javax.swing.JButton btnSaveEsp;
    private javax.swing.JButton btnSaveModCli;
    private javax.swing.JComboBox cmbModClinica;
    private javax.swing.JComboBox cmbModMedico;
    private javax.swing.JComboBox cmbNomeEsp;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JPanel jPanel7;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JScrollPane jScrollPane4;
    private javax.swing.JTabbedPane jTabbedPane1;
    private clinica.util.JTextUpper jTextUpper1;
    private clinica.util.JTextUpper jTextUpper2;
    private javax.swing.JLabel lblMsgCli;
    private javax.swing.JLabel lblMsgEsp;
    private javax.swing.JLabel lblMsgMed;
    private javax.swing.JList listEspecialidade;
    private javax.swing.JTextArea txtAtestadoClinica;
    private javax.swing.JTextArea txtAtestadoMedico;
    private javax.swing.JFormattedTextField txtDataClinica;
    private javax.swing.JFormattedTextField txtDataClinicaConsulta;
    private javax.swing.JFormattedTextField txtDataConsulta;
    private javax.swing.JFormattedTextField txtDataEsp;
    private javax.swing.JFormattedTextField txtDataMedico;
    private javax.swing.JTextField txtEndEsp;
    private javax.swing.JTextField txtEnderecoClinica;
    private javax.swing.JTextField txtEnderecoMedico;
    private javax.swing.JTextArea txtPrescricaoEsp;
    private javax.swing.JTextField txtTelsClinica;
    private javax.swing.JTextField txtTelsEsp;
    private javax.swing.JTextField txtTelsMedico;
    // End of variables declaration//GEN-END:variables

    private void ListarAtestados() {
        AtestadoMedDao mDao = new AtestadoMedDao();

        this.listaAtestadoMedico = mDao.ListasAtestadoMedico();

        if (!listaAtestadoMedico.isEmpty()) {

            cmbModMedico.removeAllItems();

            for (AtestadoMedico listaAtestadoMedico1 : listaAtestadoMedico) {
                cmbModMedico.addItem(listaAtestadoMedico1.getNome());
            }
        }

        AtestadoCliDao cDao = new AtestadoCliDao();

        this.listaAtestadoClinico = cDao.ListasAtestadoMedico();

        if (!listaAtestadoClinico.isEmpty()) {

            cmbModClinica.removeAllItems();

            for (AtestadoClinico listaAtestadoClinico1 : listaAtestadoClinico) {
                cmbModClinica.addItem(listaAtestadoClinico1.getNome());
            }
        }

        AtestadoEspDao eDao = new AtestadoEspDao();

        this.listaAtestadoEspecial = eDao.ListarAtestadoEsp();

        if (!listaAtestadoEspecial.isEmpty()) {
            cmbNomeEsp.removeAllItems();

            for (AtestadoEsp listEsp1 : listaAtestadoEspecial) {
                cmbNomeEsp.addItem(listEsp1.getPaciente());
            }
        }

        txtDataMedico.setText(DataAtual());
        txtDataClinica.setText(DataAtual());
        txtDataEsp.setText(DataAtual());
    }

    private void PreencheComboAtestado(int id) {

        if (!listaAtestadoMedico.isEmpty()) {

            txtAtestadoMedico.setText(listaAtestadoMedico.get(id).getText());
            txtEnderecoMedico.setText(listaAtestadoMedico.get(id).getEnd());
            txtTelsMedico.setText(listaAtestadoMedico.get(id).getTels());
        }
    }

    private void ListarEspecialidades() {
        EspecialidadeDao espDao = new EspecialidadeDao();
        this.listaEsp = espDao.ListarEspecialidades();

        if (!listaEsp.isEmpty()) {
            DefaultListModel lEsp = new DefaultListModel();
            JList list = new JList(lEsp);

            for (int i = 0; i < listaEsp.size(); i++) {
                //listEspecialidade.add(listaEsp.get(i).getNome());
                lEsp.add(i, listaEsp.get(i).getNome());
            }

            listEspecialidade.setModel(lEsp);
        }
    }

    private void PreencheComboAtestadoClinica(int id) {
        if (!listaAtestadoClinico.isEmpty()) {

            txtAtestadoClinica.setText(listaAtestadoClinico.get(id).getText());
            txtEnderecoClinica.setText(listaAtestadoClinico.get(id).getEnd());
            txtTelsClinica.setText(listaAtestadoClinico.get(id).getTels());
        }
    }

    private String DataAtual() {
        Date hoje = new Date(System.currentTimeMillis());
        SimpleDateFormat formato = new SimpleDateFormat("dd/MM/yyyy");

        return formato.format(hoje);
    }

    private void PreencheComboAtestadoEsp(int id) {
        if (!listaAtestadoEspecial.isEmpty()) {

            txtEndEsp.setText(listaAtestadoEspecial.get(id).getEnd());
            txtPrescricaoEsp.setText(listaAtestadoEspecial.get(id).getPrescricao());
            txtTelsEsp.setText(listaAtestadoEspecial.get(id).getTels());
            txtDataEsp.setText(listaAtestadoEspecial.get(id).getData());
        }
    }
}
